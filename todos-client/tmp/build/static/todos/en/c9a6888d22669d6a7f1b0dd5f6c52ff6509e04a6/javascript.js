Todos=SC.Application.create({store:SC.Store.create({commitRecordsAutomatically:YES}).from("Todos.Neo4jDataSource")});Todos.Todo=SC.Record.extend({primaryKey:"id",title:SC.Record.attr(String),isDone:SC.Record.attr(Boolean,{defaultValue:NO})});Todos.Todo.mixin({resourcePath:"todo",pluralResourcePath:"todos"});Todos.CreateTodoView=SC.TextField.extend({insertNewline:function(){var a=this.get("value");if(a){Todos.todoListController.createTodo(a);this.set("value","")}}});Todos.MarkDoneView=SC.Checkbox.extend({titleBinding:".parentView.content.title",valueBinding:".parentView.content.isDone"});Todos.StatsView=SC.TemplateView.extend({remainingBinding:"Todos.todoListController.remaining",displayRemaining:function(){var a=this.get("remaining");return a+(a==1?" item":" items")}.property("remaining")});Todos.todoListController=SC.ArrayController.create({content:[],createTodo:function(b){var a=Todos.store.createRecord(Todos.Todo,{title:b})},remaining:function(){return this.filterProperty("isDone",false).get("length")}.property("@each.isDone"),clearCompletedTodos:function(){this.filterProperty("isDone",true).forEach(function(a){a.destroy()})},allAreDone:function(a,b){if(b!==undefined){this.setEach("isDone",b);return b}else{return this.get("length")&&this.everyProperty("isDone",true)}}.property("@each.isDone")});SC.ready(function(){Todos.mainPane=SC.TemplatePane.append({layerId:"todos",templateName:"todos"});var a=Todos.store.find(Todos.Todo);Todos.todoListController.set("content",a)});if(typeof CHANCE_SLICES==="undefined"){var CHANCE_SLICES=[]}CHANCE_SLICES=CHANCE_SLICES.concat([]);Todos.Neo4jDataSource=SC.DataSource.extend({fetch:function(a,b){SC.Request.getUrl("/api/%@".fmt(b.recordType.pluralResourcePath)).header({Accept:"application/json"}).json().notify(this,"fetchDidComplete",a,b).send();return YES},fetchDidComplete:function(c,b,d){if(SC.ok(c)){var e=d.get("recordType"),a=c.get("body");b.loadRecords(e,a);b.dataSourceDidFetchQuery(d)}else{b.dataSourceDidErrorQuery(d,c)}},retrieveRecord:function(a,b){return NO},createRecord:function(a,b){var d=a.recordTypeFor(b),c=a.readDataHash(b);SC.Request.postUrl("/api/%@".fmt(d.pluralResourcePath)).header({Accept:"application/json"}).notify(this,"createRecordDidComplete",a,b).json().send(c);return YES},createRecordDidComplete:function(c,b,d){var a=c.get("body");if(SC.ok(c)&&c.get("status")===200){b.dataSourceDidComplete(d,null,a.id)}else{b.dataSourceDidError(d,c)}},updateRecord:function(a,b){var e=a.recordTypeFor(b),d=a.idFor(b),c=a.readDataHash(b);SC.Request.putUrl("/api/%@/%@".fmt(e.pluralResourcePath,d)).notify(this,"updateRecordDidComplete",a,b,d).header({Accept:"application/json"}).json().send(c);return YES},updateRecordDidComplete:function(b,a,c,d){if(SC.ok(b)&&b.get("status")===200){a.dataSourceDidComplete(c)}else{a.dataSourceDidError(c,b)}},destroyRecord:function(a,b){var d=a.recordTypeFor(b),c=a.idFor(b);SC.Request.deleteUrl("/api/%@/%@".fmt(d.pluralResourcePath,c)).header({Accept:"application/json"}).notify(this,"destroyRecordDidComplete",a,b).json().send();return YES},destroyRecordDidComplete:function(c,b,d){var a=c.get("body");if(SC.ok(c)&&c.get("status")===200){b.dataSourceDidDestroy(d)}else{b.dataSourceDidError(d,c)}}});SC.TEMPLATES.todos=SC.Handlebars.compile('<h1>Todos</h1>\n{{#view Todos.CreateTodoView}}\n<input id="new-todo" type="text"\n       placeholder="What needs to be done?" >\n{{/view}}\n\n{{#view Todos.StatsView id="stats"}}\n  {{#view SC.Button classBinding="isActive"\n    target="Todos.todoListController"\n    action="clearCompletedTodos"}}\n    Clear Completed Todos\n  {{/view}}\n  {{displayRemaining}} remaining\n{{/view}}\n\n{{view SC.Checkbox class="mark-all-done" title="Mark All as Done"\n  valueBinding="Todos.todoListController.allAreDone"}}\n\n{{#collection SC.TemplateCollectionView \n  contentBinding="Todos.todoListController"\n  itemClassBinding="content.isDone"\n  itemClass="foo"}}\n  {{view Todos.MarkDoneView}}\n{{/collection}}\n\n');